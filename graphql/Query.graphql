#role list
query PaginatedRoles($listInputDto: ListInputDTO!) {
  paginatedRoles(ListInputDTO: $listInputDto) {
    meta {
      totalItems
      totalPages
      currentPage
      limit
    }
    data {
      id
      name
      description
      roleType
      permissionCount
      status
    }
  }
}

#trashed roles list

query ListTrashedRoles($listInputDto: ListInputDTO!) {
  listTrashedRoles(ListInputDTO: $listInputDto) {
    data {
      description
      id
      name
      organization {
        description
        id
        name
        status
      }
      permissionCount

      roleType
      status
    }
    meta {
      currentPage
      limit
      totalItems
      totalPages
    }
  }
}

#getfindroleid
query FindRoleById($findRoleByIdId: Float!) {
  findRoleById(id: $findRoleByIdId) {
    id
    name
    description
    permissions {
      id
    }
  }
}

#All Paginated Users
query PaginatedUsers($listInputDto: ListInputDTO!) {
  paginatedUsers(ListInputDTO: $listInputDto) {
    meta {
      totalItems
      totalPages
      currentPage
      limit
    }
    data {
      id
      name
      username
      mobileNo
      email
      status
      avatar
      userType
      designation
      roles {
        id
        name
      }
    }
  }
}

#All Permissions
query AllPermissions {
  allPermissions {
    apps {
      appName
      modules {
        name
        permissions {
          module
          description
          action
          slug
          id
        }
      }
    }
  }
}

# paginated Permission list
query PaginatedPermissions($listInputDto: ListInputDTO!) {
  paginatedPermissions(ListInputDTO: $listInputDto) {
    meta {
      totalItems
      totalPages
      currentPage
      limit
    }
    data {
      id
      appName
      groupName
      module
      action
      slug
      description
    }
  }
}

#list of all Organization
query PaginatedOrganization($listInputDto: ListInputDTO!) {
  paginatedOrganization(ListInputDTO: $listInputDto) {
    meta {
      totalItems
      totalPages
      currentPage
      limit
    }
    data {
      id
      name
      description
      status
    }
  }
}

#list of all project
query PaginatedProjects($listInputDto: ListInputDTO!) {
  paginatedProjects(ListInputDTO: $listInputDto) {
    meta {
      totalItems
      totalPages
      currentPage
      limit
    }
    data {
      id
      name
      description
      status
      organizationId
      organization {
        name
      }
    }
  }
}

#trashed projects list
query ListTrashedProjects($listInputDto: ListInputDTO!) {
  listTrashedProjects(ListInputDTO: $listInputDto) {
    data {
      createdBy {
        id
      }
      description
      id
      name
      organization {
        id
        name
      }
      organizationId
      status
    }
    meta {
      totalItems
      totalPages
      currentPage
      limit
    }
  }
}

#find permission by id
query FindPermissionById($findPermissionByIdId: Float!) {
  findPermissionById(id: $findPermissionByIdId) {
    id
    appName
    groupName
    module
    action
    slug
    description
  }
}

#find id user id
query FindPermsissonByUserId($findPermissionsByUserId: Float!) {
  findPermissionsByUser(id: $findPermissionsByUserId)
}

#dahsboard count
query DashboardCount($filters: ReportFilters!) {
  dashboardCount(filters: $filters) {
    userCount
    roleCount
    permissionCount
    assignedPermissionCount
    projectCount
    organizationCount
    couponCount
    offerCount
    moduleCount
    packageCount
    planCount
    subscriptionCount
    packageModuleCount
    subscriptionPlanCount
    pageCount
  }
}

#find user  by id
query FindUserById($findUserByIdId: Float!) {
  findUserById(id: $findUserByIdId) {
    id
    name
    username
    mobileNo
    designation
    email
    status
    avatar
    userType
    parentId
  }
}

#find hirarchy by id
query UserHierarchy($parentId: Int, $nameFilter: String) {
  userHierarchy(parentId: $parentId, nameFilter: $nameFilter) {
    id
    name
    username
    mobileNo
    email
    status
    avatar
    parentId
    organizationId
    userType
    designation
    subordinates {
      name
      designation
      subordinates {
        name
        designation
        subordinates {
          name
          designation
          username
        }
        username
      }
      username
    }
  }
}

#paginated module list
query PaginatedModules($listInputDto: ListInputDTO!) {
  paginatedModules(ListInputDTO: $listInputDto) {
    meta {
      totalItems
      totalPages
      currentPage
      limit
    }
    data {
      id
      name
      description
      status
    }
  }
}

#paginated Coupans list
query PaginatedCoupons($listInputDto: ListInputDTO!) {
  paginatedCoupons(ListInputDTO: $listInputDto) {
    data {
      id
      couponCode
      description
      minOrderAmount
      discountValue
      usageLimit
      status
      startDate
      endDate
    }
    meta {
      totalItems
      totalPages
      currentPage
      limit
    }
  }
}

#trashed Coupons list
query TrashedCoupons($listInputDto: ListInputDTO!) {
  trashedCoupons(ListInputDTO: $listInputDto) {
    data {
      couponCode
      description
      endDate
      id
      discountValue
      minOrderAmount
      startDate
      status
      usageLimit
    }
    meta {
      currentPage
      limit
      totalItems
      totalPages
    }
  }
}

# dropdown list of all coupans
query CouponsDropdown($listInputDto: ListInputDTO!) {
  couponsDropdown(ListInputDTO: $listInputDto) {
    data {
      id
      couponCode
      discountValue
    }
    meta {
      totalItems
      totalPages
      currentPage
      limit
    }
  }
}

#paginated Offers list
query PaginatedOffers($listInputDto: ListInputDTO!) {
  paginatedOffers(ListInputDTO: $listInputDto) {
    meta {
      totalItems
      totalPages
      currentPage
      limit
    }
    data {
      id
      title
      description
      offerType
      discountValue
      usageLimit
      status
      startDate
      endDate
    }
  }
}

#trashed offers list
query TrashedOffers($listInputDto: ListInputDTO!) {
  trashedOffers(ListInputDTO: $listInputDto) {
    data {
      description
      discountValue
      endDate
      id
      offerType
      startDate
      status
      title
      usageLimit
    }
    meta {
      currentPage
      limit
      totalItems
      totalPages
    }
  }
}

# dropdown of all  offers
query DropdownOffers($listInputDto: ListInputDTO!) {
  dropdownOffers(ListInputDTO: $listInputDto) {
    data {
      id
      title
      discountValue
      usageLimit
    }
    meta {
      totalItems
      totalPages
      currentPage
      limit
    }
  }
}

#paginated Packages list
query PaginatedPackages($listInputDto: ListInputDTO!) {
  paginatedPackages(ListInputDTO: $listInputDto) {
    meta {
      totalItems
      totalPages
      currentPage
      limit
    }
    data {
      id
      name
      description
      price
      discountedPrice
      status
      offerType
      offerDescription
      offerExpiryDate
      modules {
        id
        description
        name
        status
      }
    }
  }
}

#trashed packages list
query TrashedPackages($listInputDto: ListInputDTO!) {
  trashedPackages(ListInputDTO: $listInputDto) {
    data {
      description
      discountedPrice
      id
      modules {
        id
      }
      name

      price
      status
    }
    meta {
      currentPage
      limit
      totalItems
      totalPages
    }
  }
}

# find package by id
query FindPackageById($findPackageByIdId: Int!) {
  findPackageById(id: $findPackageByIdId) {
    name
    price
    offerExpiryDate
    offerDescription
    discountedPrice
    modules {
      id
      name
    }
    description
    id
  }
}

# dropdown packages
query PackagesDropdown($listInputDto: ListInputDTO!) {
  packagesDropdown(ListInputDTO: $listInputDto) {
    meta {
      totalItems
      totalPages
      currentPage
      limit
    }
    data {
      id
      name
      price
    }
  }
}

# paginated Plan list
query PaginatedPlans($listInputDto: ListInputDTO!) {
  paginatedPlans(ListInputDTO: $listInputDto) {
    meta {
      totalItems
      totalPages
      currentPage
      limit
    }
    data {
      id
      name
      description
      price
      duration
      discountedPrice
      status
      couponCode

      coupon {
        couponCode
        id
      }
      package {
        id
        name
        price
      }
    }
  }
}

# TRASHED PLAN LIST
query TrashedPlans($listInputDto: ListInputDTO!) {
  trashedPlans(ListInputDTO: $listInputDto) {
    meta {
      totalItems
      totalPages
      currentPage
      limit
    }
    data {
      id
      name
      price
      status
      duration
    }
  }
}

#main pAGE of all PLANS list
query PaginatedPlansForList($listInputDto: ListInputDTO!) {
  paginatedPlansForList(ListInputDTO: $listInputDto) {
    meta {
      totalItems
      totalPages
      currentPage
      limit
    }
    data {
      id
      name
      description
      price
      duration
      discountedPrice
      status
      couponCode
    }
  }
}

# find plan by id
query FindPlanById($findPlanByIdId: Int!) {
  findPlanById(id: $findPlanByIdId) {
    id
    name
    description
    price
    duration
    discountedPrice
    status
    couponCode
  }
}

#paginated Subscriptions list
query PaginatedSubscriptions($listInputDto: ListInputDTO!) {
  paginatedSubscriptions(ListInputDTO: $listInputDto) {
    meta {
      totalItems
      totalPages
      currentPage
      limit
    }
    data {
      id
      name
      price
      duration
      status
      plans {
        id
      }
    }
  }
}

#trashed list of all users
query TrashedUsers($listInputDto: ListInputDTO!) {
  trashedUsers(ListInputDTO: $listInputDto) {
    data {
      avatar
      createdAt
      deletedAt
      email
      id
      mobileNo
      name
      organizationId
      parentId
      roles {
        id
        name
      }
      status
      updatedAt
      userType
      username
    }
    meta {
      currentPage
      limit
      totalItems
      totalPages
    }
  }
}

query Query($findPermissionsByUserId: Float!) {
  findPermissionsByUser(id: $findPermissionsByUserId)
}

query GetAllDynamicPage($listInputDto: ListInputDTO!) {
  getAllDynamicPage(ListInputDTO: $listInputDto) {
    meta {
      totalItems
      totalPages
      currentPage
      limit
    }
    data {
      id
      title
      slug
      description
      imageUrl
      content
      contentJson
    }
  }
}
# Meeting app query ------------------

query PaginatedMeeting($listInputDto: ListInputDTO!) {
  paginatedMeeting(ListInputDTO: $listInputDto) {
    data {
      id
      meetingReference
      projectId
      createdByUserId
      meetingVenueId
      meetingTypeId
      projectName
      parentMeetingId
      title
      startTime
      endTime
      status
      meetingDate
      meetingAgenda
      meetingUrl
      attendees
      attendeesNames
      uploadDoc
    }
  }
}

query GetAllMeetingTypes {
  getAllMeetingTypes {
    id
    name
  }
}

query PaginatedMeetingVenue($listInputDto: ListInputDTO!) {
  paginatedMeetingVenue(ListInputDTO: $listInputDto) {
    data {
      id
      name
      address
      contactPerson
      contactNumber
      description
    }
  }
}

query PaginatedMeetingType($listInputDto: ListInputDTO!) {
  paginatedMeetingType(ListInputDTO: $listInputDto) {
    data {
      name
      id
    }
  }
}

mutation DeleteMetingType($ids: [Int!]!) {
  deleteMetingType(ids: $ids)
}

query PaginatedNotes($listInputDto: ListInputDTO!) {
  paginatedNotes(ListInputDTO: $listInputDto) {
    data {
      decision
      id
      meetingId
      notes
    }
  }
}
query GetUpcomingMeetingTask($listInputDto: ListInputDTO!) {
  getUpcomingMeetingTask(ListInputDTO: $listInputDto) {
    data {
      id
      ownerId
      assigneeId
      meetingId
      notesId
      projectId
      parentTaskId
      task
      comment
      openedDate
      dueDate
      completedDate
      priority
      status
      completePercent
      weightType
    }
  }
}

query PaginatedMeetingTask($listInputDto: ListInputDTO!) {
  paginatedMeetingTask(ListInputDTO: $listInputDto) {
    data {
      id
      ownerId
      assigneeId
      meetingId
      notesId
      projectId
      parentTaskId
      task
      comment
      openedDate
      dueDate
      completedDate
      priority
      status
      completePercent
      totalTaskComplete
      weightType
    }
  }
}

query PaginatedNotePad($listInputDto: ListInputDTO!) {
  paginatedNotePad(ListInputDTO: $listInputDto) {
    data {
      id
      status
      notesField
    }
  }
}

query GetUpcomingMeetings($listInputDto: ListInputDTO!) {
  getUpcomingMeetings(ListInputDTO: $listInputDto) {
    data {
      id
      meetingReference
      projectId
      createdByUserId
      meetingVenueId
      meetingTypeId
      projectName
      parentMeetingId
      title
      startTime
      endTime
      status
      meetingDate
      meetingAgenda
      meetingUrl
      attendees
    }
  }
}

query GetMeetingDashboard {
  getMeetingDashboard {
    totalMeetings
    activeMeetings
    inactiveMeetings
    upComingMeeting
    completedMeeting
    todayMeeting
    totalTasks
    inComingTasks
    ongoingTasks
    completedTasks
  }
}

query PaginatedVehicles($listInputDto: ListInputDTO!) {
  paginatedVehicles(ListInputDTO: $listInputDto) {
    meta {
      totalItems
      totalPages
      currentPage
      limit
    }
    data {
      id
      make
      model
      year
      color
      chassisNumber
      numberPlate
      maintenanceHistory
      avatar
      insurance
      insuranceValidTill
      status
      latitude
      longitude
      createdById
      organizationId
      createdAt
      updatedAt
      deletedAt
    }
  }
}

query DropdownRoles($listInputDto: ListInputDTO!) {
  dropdownRoles(ListInputDTO: $listInputDto) {
    meta {
      totalItems
      totalPages
      currentPage
      limit
    }
    data {
      id
      name
      description
      roleType
      status
      permissionCount
      organization {
        id
        name
        description
        status
      }
    }
  }
}

query GetPaginatedNotesByMeetingId($meetingId: Int!, $query: ListInputDTO!) {
  getPaginatedNotesByMeetingId(meetingId: $meetingId, query: $query) {
    data {
      id
      createdByUserId
      meetingId
      decision
      notes
    }
  }
}

query GetPaginatedMeetingTaskByMeetingId(
  $meetingId: Int!
  $query: ListInputDTO!
) {
  getPaginatedMeetingTaskByMeetingId(meetingId: $meetingId, query: $query) {
    data {
      id
      ownerId
      createdByUserId
      assigneeId
      meetingId
      notesId
      projectId
      parentTaskId
      ownerName
      assigneeName
      task
      projectName
      comment
      openedDate
      dueDate
      completedDate
      priority
      status
      completePercent
      totalTaskComplete
      weightType
    }
  }
}

query PaginatedBreakdowns($listInputDto: ListInputDTO!) {
  paginatedBreakdowns(ListInputDTO: $listInputDto) {
    data {
      id
      vehicleId
      vehicle {
        id
        make
        model
        year
        color
        chassisNumber
        numberPlate
        maintenanceHistory
        avatar
        insurance
        insuranceValidTill
        status
        latitude
        longitude
        createdById
        organizationId
        createdAt
        updatedAt
        deletedAt
      }
      breakdownType
      breakdownDate
      breakdownDescription
      breakdownLocation
      latitude
      longitude
      status
      organizationId
      createdById
      createdAt
      updatedAt
    }
  }
}
query ListTrashedMeeting($listInputDto: ListInputDTO!) {
  listTrashedMeeting(ListInputDTO: $listInputDto) {
    data {
      id
      meetingReference
      projectId
      createdByUserId
      meetingVenueId
      meetingTypeId
      projectName
      parentMeetingId
      title
      startTime
      endTime
      status
      meetingDate
      meetingAgenda
      meetingUrl
    }
  }
}

query PaginatedActivityLogMeeting($listInputDto: ListInputDTO!) {
  paginatedActivityLogMeeting(ListInputDTO: $listInputDto) {
    data {
      id
      createdByUserId
      module
      moduleId
      description
      activity
      ipAddress
      userAgent
    }
  }
}

query ListTrashedFollowUp($listInputDto: ListInputDTO!) {
  listTrashedFollowUp(ListInputDto: $listInputDto) {
    data {
      id
      userId
      followUpId
      subject
      body
      createdById
    }
  }
}
query PaginatedFollowUp($listInputDto: ListInputDTO!) {
  paginatedFollowUp(ListInputDTO: $listInputDto) {
    data {
      id
      userId
      followUpId
      subject
      body
      createdById
    }
  }
}
query PaginatedMilestone($listInputDto: ListInputDTO!) {
  paginatedMilestone(ListInputDTO: $listInputDto) {
    data {
      id
      projectId
      name
      startDate
      endDate
      projectName
      totalTaskCompleteMilestone
      status
    }
  }
}
query ListTrashedMilestone($listInputDto: ListInputDTO!) {
  listTrashedMilestone(ListInputDTO: $listInputDto) {
    data {
      id
      projectId
      name
      startDate
      endDate
      projectName
      totalTaskCompleteMilestone
      status
    }
  }
}
query ListTrashedMeetingTask($listInputDto: ListInputDTO!) {
  listTrashedMeetingTask(ListInputDTO: $listInputDto) {
    data {
      id
      ownerId
      createdByUserId
      assigneeId
      meetingId
      notesId
      projectId
      parentTaskId
      milestoneId
      ownerName
      assigneeName
      task
      projectName
      comment
      remarks
      openedDate
      dueDate
      completedDate
      priority
      status
      completePercent
      totalTaskComplete
      weightType
      totalTaskCompleteMilestone
    }
  }
}
query ListTrashedMeetingVenue($listInputDto: ListInputDTO!) {
  listTrashedMeetingVenue(ListInputDTO: $listInputDto) {
    data {
      id
      name
      address
      contactPerson
      contactNumber
      description
      latitude
      longitude
      createdByUserId
    }
  }
}
query ListTrashedMeetingType($listInputDto: ListInputDTO!) {
  listTrashedMeetingType(ListInputDTO: $listInputDto) {
    data {
      id
      name
      createdByUserId
    }
  }
}

# paginated service center 
query PaginatedServiceCenters($listInputDto: ListInputDTO!) {
  paginatedServiceCenters(ListInputDTO: $listInputDto) {
    meta {
      totalItems
      totalPages
      currentPage
      limit
    }
    data {
      id
      name
    }
  }
}